#version 450

// These should match the constants defined in deferred_rendering.c
#define MAX_NUM_LIGHTS 1024

struct LightData {
  vec4 position;
  vec3 color;
  float radius;
};
layout(set=0, binding=0) buffer LightsBuffer {
    LightData lights[MAX_NUM_LIGHTS];
} lightsBuffer;

layout(set=0, binding=1) uniform Config {
    uint numLights;
} config;

layout(set=0, binding=2) uniform LightExtent {
    vec4 min;
    vec4 max;
} lightExtent;

void main() {
    uint index = gl_GlobalInvocationID.x;
    if (index >= config.numLights) {
      return;
    }

    lightsBuffer.lights[index].position.y = lightsBuffer.lights[index].position.y - 0.5 - 0.003 * (index - 64.0 * floor(index / 64.0));
  
    if (lightsBuffer.lights[index].position.y < lightExtent.min.y) {
        lightsBuffer.lights[index].position.y = lightExtent.max.y;
    }
}